'
' Interpréteur "BASIC" en AMOS...
'
'
Screen Open 0,640,256,2,Hires
Palette $155,$FFF : Curs Off : Flash Off 
'
Open In 1,"Work 3:Source.BAS"
'
'
Dim BOUCLE$(10),BOUCLE(10,2) : BOUCLE=-1
Dim VAR$(10)
Dim VVAL(10)
BOUCLE=-1
LINE=1
C$=""
Global BOUCLE$(),BOUCLE(),VAR$(),VVAL(),BOUCLE,LINE,C$
'
'
While Not(Eof(1))
   ' saute tous les espaces et tabulations  
   ' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   Repeat 
      C$=Input$(1,1)
      If Eof(1)
         If BOUCLE=-1
            ERREUR["Fin du programme"]
         Else 
            ERREUR["NEXT Manquant"]
         End If 
      End If 
   Until(C$<>Chr$(9)) and(C$<>" ")
   
   ' lit une variable ou une procedure
   ' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   C$=Upper$(C$)
   T$=""
   Repeat 
      T$=T$+C$
      C$=Upper$(Input$(1,1))
      If C$=Chr$(9) Then C$=""
   Until(C$<"A") or(C$>"Z")
   
   ' regarde si c'est une procedure 
   ' ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
   If T$="FOR"
      LIT_FOR
      Goto SUIVANT
   End If 
   If T$="NEXT"
      LIT_NEXT
      Goto SUIVANT
   End If 
   If T$="PRINT"
      FUNC_PRINT
      Goto SUIVANT
   End If 
   If T$="CLS"
      FUNC_CLS
      Goto SUIVANT
   End If 
   
   ' c'est une affectation  
   ' ~~~~~~~~~~~~~~~~~~~~~  
   AFFECT[T$]
   
   ' on passe à la suite
   ' ~~~~~~~~~~~~~~~~~~~
   SUIVANT:
   NEW_LINE
Wend 
'  
'
Procedure ERREUR[A$]
   Print A$;" à la ligne ";LINE
   Close 1
   End 
End Proc
Procedure SAUTE_ESPACE
   While(C$=" ") or(C$=Chr$(9))
      C$=Input$(1,1)
   Wend 
End Proc
Procedure NEW_LINE
   While(C$=" ") or(C$=Chr$(9))
      C$=Input$(1,1)
   Wend 
   If C$<>Chr$(10)
      ERREUR["Erreur de syntaxe"]
   End If 
   Inc LINE
End Proc
'
'
Procedure LIT_NB
   C$=""
   A$=""
   Repeat 
      A$=A$+C$
      C$=Input$(1,1)
   Until(C$<"0") or(C$>"9")
   If A$=""
      ERREUR["NB attendu"]
   End If 
End Proc[Val(A$)]
Procedure LIT_STR
   If C$=Chr$(34)
      A$=""
      C$=""
      Repeat 
         A$=A$+C$
         C$=Input$(1,1)
         If C$=Chr$(10)
            ERREUR[Chr$(34)+" attendu"]
         End If 
      Until C$=Chr$(34)
      C$=Input$(1,1)
   Else 
      ERREUR[Chr$(34)+" attendu"]
   End If 
End Proc[A$]
Procedure LIT_VAR
   If C$=" "
      VAR$=""
      C$=""
      Repeat 
         VAR$=VAR$+C$
         C$=Upper$(Input$(1,1))
      Until(C$<"A") or(C$>"Z")
   Else 
      ERREUR["VAR attendu"]
   End If 
End Proc[VAR$]
Procedure AFFECT[A$]
   If C$="="
      LIT_NB
   Else 
      ERREUR["= attendu"]
   End If 
   A=0
   While(VAR$(A)<>"") and(VAR$(A)<>A$)
      Inc A
   Wend 
   VAR$(A)=A$
   VVAL(A)=Param
End Proc
'
'
Procedure LIT_FOR
   If C$=" "
      Inc BOUCLE
      LIT_VAR
      BOUCLE$(BOUCLE)=Param$
      AFFECT[Param$]
      LIT_TO
      LIT_NB
      BOUCLE(BOUCLE,0)=Param
      SAUTE_ESPACE
      If C$=Chr$(10)
         BOUCLE(BOUCLE,1)=Pof(1)+1
      End If 
   Else 
      ERREUR["Erreur de syntaxe"]
   End If 
End Proc
Procedure LIT_TO
   If C$=" "
      A$=Input$(1,2)
      C$=Input$(1,1)
      If Upper$(A$+C$)<>"TO "
         ERREUR["TO attendu"]
      End If 
   Else 
      ERREUR["TO Attendu"]
   End If 
End Proc
Procedure LIT_NEXT
   LIT_VAR
   If BOUCLE>=0
      If BOUCLE$(BOUCLE)=Param$
         A=0
         While VAR$(A)<>Param$
            Inc A
         Wend 
         Inc VVAL(A)

         SAUTE_ESPACE
         If VVAL(A)<=BOUCLE(BOUCLE,0)
            If C$=Chr$(10)
               Pof(1)=BOUCLE(BOUCLE,1)
            Else 
               ERREUR["Erreur de syntaxe"]
            End If 
         Else 
            Dec BOUCLE
         End If 
      Else 
         ERREUR["VAR du NEXT incorrect"]
      End If 
   Else 
      ERREUR["NEXT sans FOR"]
   End If 
End Proc
'
'
Procedure FUNC_PRINT
Procedure FUNC_CLS
